{"version":3,"file":"useAsync.js","sourceRoot":"../src/","sources":["useAsync.ts"],"names":[],"mappings":";;;IAIA;;OAEG;IACH,SAAgB,QAAQ;QACtB,IAAM,QAAQ,GAAG,mBAAQ,CAAQ,cAAM,OAAA,IAAI,iBAAK,EAAE,EAAX,CAAW,CAAC,CAAC;QAEpD,qFAAqF;QACrF,KAAK,CAAC,SAAS,CAAC,cAAM,OAAA,cAAM,OAAA,QAAQ,CAAC,OAAO,EAAE,EAAlB,CAAkB,EAAxB,CAAwB,EAAE,EAAE,CAAC,CAAC;QAEpD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAPD,4BAOC","sourcesContent":["import { Async } from '@uifabric/utilities';\nimport * as React from 'react';\nimport { useConst } from './useConst';\n\n/**\n * Hook to provide an Async instance that is automatically cleaned up on dismount.\n */\nexport function useAsync() {\n  const asyncRef = useConst<Async>(() => new Async());\n\n  // Function that returns a function in order to dispose the async instance on unmount\n  React.useEffect(() => () => asyncRef.dispose(), []);\n\n  return asyncRef;\n}\n"]}