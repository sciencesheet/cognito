{"version":3,"file":"codes.js","sourceRoot":"../src/","sources":["codes.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Mapping from numeric key code to key name. If the value is an array, the first element is the\n * primary key name, and the second element is the key name when shift is pressed.\n */\nexport const codes: { [code: string]: string | string[] } = {\n  // ----------------------------------------\n  // By Code\n  // ----------------------------------------\n  3: 'Cancel',\n  6: 'Help',\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  28: 'Convert',\n  29: 'NonConvert',\n  30: 'Accept',\n  31: 'ModeChange',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  41: 'Select',\n  42: 'Print',\n  43: 'Execute',\n  44: 'PrintScreen',\n  45: 'Insert',\n  46: 'Delete',\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n  91: 'OS',\n  93: 'ContextMenu',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  181: 'VolumeMute',\n  182: 'VolumeDown',\n  183: 'VolumeUp',\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: [\"'\", '\"'],\n  224: 'Meta',\n  225: 'AltGraph',\n  246: 'Attn',\n  247: 'CrSel',\n  248: 'ExSel',\n  249: 'EraseEof',\n  250: 'Play',\n  251: 'ZoomOut',\n};\n\n// Function Keys (F1-24)\nfor (let i = 0; i < 24; i += 1) {\n  codes[112 + i] = 'F' + (i + 1);\n}\n\n// Alphabet (a-Z)\nfor (let j = 0; j < 26; j += 1) {\n  const n = j + 65;\n  codes[n] = [String.fromCharCode(n + 32), String.fromCharCode(n)];\n}\n"]}