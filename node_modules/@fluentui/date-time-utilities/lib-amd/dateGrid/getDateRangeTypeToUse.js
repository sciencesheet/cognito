define(["require", "exports", "../dateValues/dateValues"], function (require, exports, dateValues_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Return corrected date range type, given `dateRangeType` and list of working days.
     * For non-contiguous working days and working week range type, returns general week range type.
     * For other cases returns input date range type.
     * @param dateRangeType - input type of range
     * @param workWeekDays - list of working days in a week
     */
    exports.getDateRangeTypeToUse = function (dateRangeType, workWeekDays) {
        if (workWeekDays && dateRangeType === dateValues_1.DateRangeType.WorkWeek) {
            var sortedWWDays = workWeekDays.slice().sort();
            var isContiguous = true;
            for (var i = 1; i < sortedWWDays.length; i++) {
                if (sortedWWDays[i] !== sortedWWDays[i - 1] + 1) {
                    isContiguous = false;
                    break;
                }
            }
            if (!isContiguous || workWeekDays.length === 0) {
                return dateValues_1.DateRangeType.Week;
            }
        }
        return dateRangeType;
    };
});
//# sourceMappingURL=getDateRangeTypeToUse.js.map